(this["webpackJsonpfinal-project-quiz"]=this["webpackJsonpfinal-project-quiz"]||[]).push([[0],[,,,,,,,,,,,,,,function(t,e,i){},function(t,e,i){},,function(t,e,i){},function(t,e,i){},function(t,e,i){},function(t,e,i){"use strict";i.r(e);var n,o,a,s,c=i(2),r=i.n(c),l=i(9),p=i.n(l),d=(i(14),i(4)),u=i(1),h="CONCEPT",b="SKILL",y="Layout and Design",m="Frontend",j="Backend",g="RES_DESIGN",f="GAME_LOGIC",O="GET_DATA",x="WRITE_DATA",A="AUTH",v="PRIVATE_ROUTES",T=(n={},Object(u.a)(n,y,[{id:"REP_LAYOUT_SKILL",text:"Reproducing an existing layout",type:b,points:20},{id:"BUILD_LAYOUT",text:"Building a layout from scratch",type:b,points:20},{id:g,text:"Responsive design",type:b,points:0},{id:"FLEXBOX",text:"Flexbox",type:h,points:10},{id:"GRIDS",text:"Grids",type:h,points:10},{id:"UI_DESIGN",text:"Desing (you are already a designer and/or are very comfortable with design tools)",type:b,points:10},{id:"REACT_LAYOUT",text:"React layouting (JSX)",type:b,points:25},{id:"BRANDING",text:"Branding (exceptional use of fonts, colours etc.)",type:b,points:5}]),Object(u.a)(n,m,[{id:"SPA",text:"SPA concepts",type:h,points:10},{id:"SPA_ROUTES",text:"SPA routes vs server routes",type:h,points:10},{id:"APP_STATE",text:"Application state concepts",type:h,points:20},{id:"REACT_PROPS",text:"React state/props",type:b,points:30},{id:"GLOBAL_STATE",text:"Global application state",type:h,points:10},{id:"REACT_GLOBAL_STATE",text:"React global state",type:b,points:10},{id:f,text:"Game logic",type:h,points:0},{id:O,text:"Data fetching (read/GET)",type:b,points:0},{id:x,text:"Data fetching (write/POST)",type:b,points:10}]),Object(u.a)(n,j,[{id:"DATA_MODEL",text:"Data modelling with NoSQL",type:h,points:10},{id:"DATA_PER",text:"Data persistence",type:h,points:20},{id:"API_ROUTES",text:"API routes",type:h,points:15},{id:"GET_ROUTES",text:"Routes for reading (read/GET)",type:b,points:20},{id:"POST_ROUTES",text:"Routes for writing (write/POST)",type:b,points:15},{id:"SEC_API",text:"Secondary API functionality (search, nested routes etc.)",type:b,points:10},{id:"DEPLOYMENT",text:"Deployment of server on Heroku",type:b,points:5},{id:A,text:"Authentication flow",type:h,points:0},{id:v,text:"Authentication flow and private routes",type:b,points:0},{id:"UPLOADS",text:"Static files upload",type:b,points:5}]),n),k=i(6),S=i(3),P="FULL_STACK_AUTH",I="FULL_STACK",E="ADVANCED_SPA",w="MEDIUM_SPA",_="SIMPLE_SPA",L="MINIMAL_CLIENT",N="RESPONSIVE_DESIGN",C="MINIMAL_UI",D="PUBLIC_API",M="GAME",R="DATA_FETCHING",G=(o={},Object(u.a)(o,C,{text:"Try to keep your layout minimal",reason:"you scored poorly in ".concat(y,".")}),Object(u.a)(o,L,{text:"Try to keep your client minimal, avoiding nested props or global state.",reason:"you scored poorly in ".concat(m,".")}),Object(u.a)(o,N,{text:"Consider making your app responsive",reason:"you ticked the question related to responsive design."}),Object(u.a)(o,R,{text:"Make sure you reviews data fetching in React",reason:"you did not tick the ".concat(m," questions related to data fetching (POST and GET).")}),Object(u.a)(o,D,{text:"Consider using a public API",reason:"you ticked the ".concat(m," questions related to data fetching (POST and GET).")}),Object(u.a)(o,M,{text:"Consider something game-like, for instance a simple puzzle game or a gamified educational app",reason:"you ticked the game logic question."}),o),U={title:"Full Stack Web App with Authorisation",desc:["This type of application consists of three main parts: a backend with data persistence, a client that communicates with it through an API and an authorisation flow","It is the most advanced type of application, but you may be able to tackle it!"],examples:["Job searching platform","E-commerce app"],links:[{title:"App for bands to centralise all their material",live:"https://backliner.app/signin",code:"https://github.com/Ey-Jay/backliner"},{title:"App for sharing your meal on video calls",live:"https://share-your-meal.netlify.app/",code:"https://github.com/Priyankavhiremath/share-your-meal_backend"},{title:"Rick and Morty quiz app with google signup",live:"https://rickysquest.netlify.app/",code:"https://github.com/Ey-Jay/rickysquest"}],highlights:[L,C,N,R]},F={title:"Full Stack Web App (No authorisation flow)",desc:["This type of application consists of two main parts: a backend with data persistence and client that communicates with it through an API","It is an advanced type of application, but you may be able to tackle it"],examples:["Meme generator with storage for images","Next js app"],links:[],highlights:[L,C,N,R]},B={title:"Advanced app/website",desc:["This type of application is only client-side.","However, you can stretch its limits: think about complex logic and state management, exploring the HTML media API, having a stab at mobile apps, data visualisation...","You can get creative with frontend functionalities and experiment with browser APIs since you seem to be up to the challenge!"],examples:["Pokemon battle app","Language learning app","Maps-heavy app","Interactive text-based story (with choices)","React Native app"],links:[{title:"App to create and record beats",live:"https://sinkinbeats.com/",code:"https://github.com/JakubJureczko/drum-seq"},{title:"Meme generator",live:"https://laughing-lamarr-1ace5c.netlify.app/",code:"https://github.com/Hangrykat/Meme-Generator"},{title:"Real-time flight scanner",live:"https://aviate.live/#/",code:"https://github.com/arminebner/aviate"}],highlights:[C,D,M,N]},q={title:"Intermediate app/website",desc:["This type of application is only client-side.","The advice is to keep it relatively simple: moderate level of component nesting, no global state, moderate complexity on the business logic side etc."],examples:["ToDo list","this app","Tic Tac Toe","Rock, Paper, Scissors","Pokedex"],links:[{title:"Rock, Paper, Scissors",live:"https://rock-paper-scissors-gui.netlify.app/",code:"https://github.com/shidoro/rock-paper-scissors-gui"},{title:"ToDo List",live:"https://tinobrose.github.io/To-do-list/#/todo-list",code:"https://github.com/TinoBrose/To-do-list"}],highlights:[C,D,M,N]},H={title:"Simple app/website",desc:["This type of application is only client-side.","The advice is to keep it very simple, with no state or very minimal state.","Leverage the design and/or the content over the functionality!"],examples:["Portfolio","Photography website","Interactive text-based story (with no or few choices)"],links:[{title:"Portfolio example 1",live:"https://www.jakubjureczko.com/"},{title:"Portfolio example 2",live:"https://juliamj.netlify.app/",code:"https://github.com/juliamj/portfolio_"},{title:"Promotional website for a dental clinic",live:"https://klinger-dent.vercel.app/"}],highlights:[N]},z=(a={},Object(u.a)(a,P,U),Object(u.a)(a,I,F),Object(u.a)(a,E,B),Object(u.a)(a,w,q),Object(u.a)(a,_,H),a),J=(s={},Object(u.a)(s,y,0),Object(u.a)(s,m,0),Object(u.a)(s,j,0),s),K={main:z.SIMPLE_SPA,suggestions:[],score:J};var V=function(){var t=Object(c.useState)([]),e=Object(d.a)(t,2),i=e[0],n=e[1],o=Object(c.useState)(K),a=Object(d.a)(o,2),s=a[0],r=a[1],l=function(t,e){var n=t.highlights,o=e[y],a=e.Frontend,s=2===i.filter((function(t){return t.id===O||t.id===x})).length;return n.reduce((function(t,e){switch(e){case C:return o<60?[].concat(Object(S.a)(t),[G.MINIMAL_UI]):t;case L:return a<60?[].concat(Object(S.a)(t),[G.MINIMAL_CLIENT]):t;case R:return s?t:[].concat(Object(S.a)(t),[G.DATA_FETCHING]);case D:return s?[].concat(Object(S.a)(t),[G.PUBLIC_API]):t;case N:return i.find((function(t){return t.id===g}))?[].concat(Object(S.a)(t),[G.RESPONSIVE_DESIGN]):t;case M:return i.find((function(t){return t.id===f}))?[].concat(Object(S.a)(t),[G.GAME]):t;default:return t}}),[])},p=function(t){var e=t.Backend,n=t.Frontend,o=2===i.filter((function(t){return t.id===A||t.id===v})).length;return e>60&&o?z.FULL_STACK_AUTH:e>60?z.FULL_STACK:n>70?z.ADVANCED_SPA:n<=70&&t.Frontend>40?z.MEDIUM_SPA:z.SIMPLE_SPA};return[function(t,e){var o=i.find((function(e){return e.id===t.id}))?i.filter((function(e){return e.id!==t.id})):[].concat(Object(S.a)(i),[Object(k.a)(Object(k.a)({},t),{},{cat:e})]);n(o)},s,function(){var t=i.reduce((function(t,e){var i=e.cat;return Object(k.a)(Object(k.a)({},t),{},Object(u.a)({},i,t[i]+e.points))}),J),e=p(t),n=l(e,t);r({main:e,suggestions:n,score:t})}]},Y=(i(15),i(0));var W=function(t){var e=t.type,i=t.onChange;return Object(Y.jsxs)("section",{className:"QuizSection",children:[Object(Y.jsx)("div",{className:"title",children:e}),T[e].map((function(t){return Object(Y.jsxs)("div",{className:"".concat(t.type.toLowerCase()," entry"),children:[Object(Y.jsx)("input",{id:t.id,name:"client-side-question",type:"checkbox",onChange:function(){return i(t,e)}}),Object(Y.jsx)("label",{htmlFor:t.id,children:t.text})]})}))]})};i(17);var X=function(){return Object(Y.jsxs)("header",{children:[Object(Y.jsx)("h1",{children:"Final Project Assessment Form"}),Object(Y.jsx)("p",{children:"This quiz will help you assess your skill level and decide on the complexity of your graduation project."}),Object(Y.jsxs)("p",{children:["The color of the entries matters: ",Object(Y.jsx)("span",{className:"concept color",children:"green"})," entries are about notions and concepts,",Object(Y.jsx)("span",{className:"skill color",children:" pink"})," entries are about practical skills and implementation."]}),Object(Y.jsxs)("p",{children:["Only tick the ",Object(Y.jsx)("span",{className:"concept color",children:"green"})," entries off when you think you understand something conceptually. That is to say, you can describe what this technology's potential is, which problems it addresses etc. The best way is to try to explain them out loud to your rubberducky, your clone or what not, and make sure you're making sense and not stumbling too much. Another way is to see if you can create a conceptual map or a diagram about the topic in the entry."]}),Object(Y.jsxs)("p",{children:["Only tick the ",Object(Y.jsx)("span",{className:"skill color",children:"pink"})," entries off when you feel confident you can use those technologies and/or implement those features. If you have already implemented successfully on your own on some project or you can visualise a way to implement them by thinking about all the steps it would take to, you are probably good to go. However, if you realise there are too many gaps in your thought process, then it's better not to tick them off."]})]})};i(18);var Q=function(t){var e=t.toggle,i=t.content,n=i.main,o=i.score,a=i.suggestions;return Object(Y.jsxs)("div",{className:"Modal",children:[Object(Y.jsx)("h2",{className:"title",children:n.title}),Object(Y.jsxs)("div",{className:"content",children:[n.desc.map((function(t){return Object(Y.jsx)("div",{children:t})})),Object(Y.jsx)("br",{}),Object(Y.jsx)("b",{children:"Suggestions"}),a.map((function(t){var e=t.text,i=t.reason;return Object(Y.jsxs)("div",{children:[e," since ",i]})}))]}),Object(Y.jsx)("br",{}),Object(Y.jsxs)("div",{className:"totalScore",children:[Object(Y.jsx)("b",{children:"Final score"}),Object(Y.jsx)("br",{}),Object(Y.jsx)("span",{className:"scoreTag",children:y}),": ",o[y],"/",100,Object(Y.jsx)("br",{}),Object(Y.jsx)("span",{className:"scoreTag",children:m}),": ",o.Frontend,"/",100,Object(Y.jsx)("br",{}),Object(Y.jsx)("span",{className:"scoreTag",children:j}),": ",o.Backend,"/",100]}),Object(Y.jsx)("button",{onClick:e,children:"Close"})]})},Z=(i(19),[y,m,j]);var $=function(){var t=Object(c.useState)(!1),e=Object(d.a)(t,2),i=e[0],n=e[1],o=V(),a=Object(d.a)(o,3),s=a[0],r=a[1],l=a[2],p=function(){n(!i)};return Object(Y.jsxs)("div",{className:"App",children:[Object(Y.jsxs)("div",{className:"Backdrop ".concat(i&&"openModal"),children:[Object(Y.jsx)(X,{}),Z.map((function(t){return Object(Y.jsx)(W,{type:t,onChange:s})})),Object(Y.jsx)("button",{onClick:function(){l(),p()},onKeyPress:p,children:"My result"})]}),i&&Object(Y.jsx)(Q,{toggle:p,content:r})]})},tt=function(t){t&&t instanceof Function&&i.e(3).then(i.bind(null,21)).then((function(e){var i=e.getCLS,n=e.getFID,o=e.getFCP,a=e.getLCP,s=e.getTTFB;i(t),n(t),o(t),a(t),s(t)}))};p.a.render(Object(Y.jsx)(r.a.StrictMode,{children:Object(Y.jsx)($,{})}),document.getElementById("root")),tt()}],[[20,1,2]]]);
//# sourceMappingURL=main.ada8a8e9.chunk.js.map